# Generated by Django 4.0.4 on 2024-08-20 13:28

import base.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Имя/Название')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория товаров',
                'verbose_name_plural': 'Категории товаров',
            },
        ),
        migrations.CreateModel(
            name='ItemStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст')),
            ],
            options={
                'verbose_name': 'Статус товаров',
                'verbose_name_plural': 'Статусы товаров',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('area', models.PositiveIntegerField(blank=True, null=True, verbose_name='Площадь (кв.м.)')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
            },
        ),
        migrations.CreateModel(
            name='StorageClientM2M',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booked_area', models.PositiveIntegerField(default=1, verbose_name='Зарезервировання площадь (кв.м.)')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.client')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.storage')),
            ],
        ),
        migrations.AddField(
            model_name='storage',
            name='clients',
            field=models.ManyToManyField(related_name='storages', through='base.StorageClientM2M', to='base.client', verbose_name='Клиенты'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='base.client', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('article', models.CharField(max_length=6, primary_key=True, serialize=False, unique=True, verbose_name='Артикул')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('weight', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Масса (кг)')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Высота (см)')),
                ('width', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Ширина (см)')),
                ('length', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Длина (см)')),
                ('count', models.PositiveIntegerField(verbose_name='Количество')),
                ('is_booked', models.BooleanField(default=False, verbose_name='Забронирован?')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Подтверждение наличия')),
                ('arrival_date', models.DateField(auto_now_add=True, verbose_name='Дата прихода')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Срок годности (конечная дата)')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='base.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=128, unique=True, verbose_name='Никнейм')),
                ('password', models.CharField(max_length=255, verbose_name='Пароль')),
                ('first_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Отчество')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Менеджер?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Руководитель/Администратор?')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='base.client', verbose_name='Клиент')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', base.models.UserManager()),
            ],
        ),
    ]
